{"version":3,"sources":["utils/lang/hi.ts","utils/lang/en.ts","Components/LandingPage/LandingPage.tsx","serviceWorker.ts","index.tsx"],"names":["local","title","marketingContent","p1","p2","counterpart","registerTranslations","en","hi","setSeparator","useStyles","makeStyles","theme","createStyles","root","flexGrow","textAlign","card","display","padding","alignItems","cardDetails","flex","cardMedia","width","height","margin","spacing","basicTerminologyPosts","iconImage","navigationULR","why9stacksPosts","content","content1","details","content1Des","imgAlt","content2","content2Des","content3","content3Des","LandingPage","React","useState","open","vertical","horizontal","contactNumber","state","setState","history","useHistory","location","pathname","includes","setLocale","listen","locationObj","classes","onRegisterHandler","event","RegExp","test","window","href","setInterval","updateInput","target","value","CssBaseline","Snackbar","anchorOrigin","key","autoHideDuration","ContentProps","message","id","className","AppBar","position","color","Toolbar","src","alt","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","heading","fallback","activeClassName","to","Button","Grid","container","alignContent","item","md","xs","component","subtitle","autoFocus","type","onChange","variant","onClick","register","line1","line2","line3","line4","subline1","subline2","justify","data-allowfullscreen","map","post","CardActionArea","Card","CardMedia","image","CardContent","Typography","Boolean","hostname","match","routing","exact","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76929e89.chunk.js","sourcesContent":["import * as marketingContent from '../../Components/LandingPage/content.json';\n\nconst local = {\n    title: 'Title',\n    'What you get on registering on 9stacks': 'आप 9stacks पर पंजीकरण करवाते हैं',\n    [marketingContent['BANNER_CONTENT']['oldtitle']] : 'जुड़ें और अपने खाते में 500 रुपये तक बोनस प्राप्त करें!',\n    [marketingContent['HEADER']['heading']] : 'जहां भारत पोकर खेलता है!',\n    [marketingContent['BANNER_CONTENT']['title']] : '500 रुपये तक बोनस प्राप्त करें!',\n    [marketingContent['BANNER_CONTENT']['subtitle']] : 'जुड़ें 9stacks से, जहां भारत पोकर खेलता है!',\n    [marketingContent['BANNER_CONTENT']['register']] : 'रजिस्टर करें',\n    [marketingContent['ON_REGISTER']['heading']] : '9stacks पर साइन अप करें और अपने फ्री स्पिन का दावा करे और 100 रुपये तक नकद पुरस्कार जीतें!',\n    [marketingContent['ON_REGISTER']['line1']] : 'और अधिक जीतने के लिए खेलते हैं!',\n    [marketingContent['ON_REGISTER']['line2']] : 'आप सरल कार्यों को पूरा करके अधिक स्पिन टोकन जीत सकते हैं!',\n    [marketingContent['ON_REGISTER']['line3']] : 'सभी कार्यों को पूरा करने पर, आपको एक मेगा स्पिन भी मिलता है जो आपको आईफोन दिला सकता है !!',\n    [marketingContent['ON_REGISTER']['line4']] : 'पंजीकरण पर विशेष जमा कोड प्राप्त करें जो आपको 1000 रुपए  तक अतिरिक्त देगा',\n    [marketingContent['NEW_TO_POKER_BLOCK']['heading']] : \"पोकर के लिए नये हो? 9stacks के साथ कौशल का खेल जानें\",\n    [marketingContent['NEW_TO_POKER_BLOCK']['subline1']] : \"यदि आपके पास कार्ड गेम खेलने का एक सामान्य विचार है, तो यह समझना बहुत आसान है कि पोकर गेम कैसे चलता है।\",\n    [marketingContent['NEW_TO_POKER_BLOCK']['subline2']] : \"आपको सामान्य लैंडस्केप पर जल्दी से आरंभ करने के लिए, यहां एक वीडियो है कि कैसे टेक्सास होल्डम पोकर खेलना है।\",\n    [marketingContent['KNOW_MORE']['heading']] : \"अधिक जानना चाहते हैं?\",\n    [marketingContent['KNOW_MORE']['subline1']] : \"नौसिखियों के लिए ये शुरुआती गाइड मूल बातें कवर करते हैं, पोकर हाथों से सामान्य चाल तक।\",\n    [marketingContent['WHY_9STACKS']['heading']] : \"9stacks पर पोकर क्यों खेलें?\",\n    [marketingContent['WHY_9STACKS']['content1']] : \"हमारे जोखिम मुक्त 1 पैसे की बिगिनर टेबल पर शुरू करें\",\n    [marketingContent['WHY_9STACKS']['content1Des']] : \"अन्वेषण करें और माइक्रो-दांव पर जाने से पहले खेल (टेक्सास होल्ड 'एम या पॉट लिमिट ओमाहा) के लिए एक महसूस करें। आप सिर्फ 2 रुपये में 1 घंटे खेल सकते हैं।\",\n    [marketingContent['WHY_9STACKS']['content2']] : \"नि: शुल्क टूर्नामेंट में भाग लें\",\n    [marketingContent['WHY_9STACKS']['content2Des']] : \"हमारे दिन-रात  का ज़ीरो बाय-इन टूर्नामेंट में अपने कौशल का प्रयास करें, यह आपको असली पैसे पूरी तरह से वापस लेने योग्य पुरस्कार देता है\",\n    [marketingContent['WHY_9STACKS']['content3']] : \" उच्च मूल्य बोनस और ऑफ़र का लाभ उठाएं\",\n    [marketingContent['WHY_9STACKS']['content3Des']] : \"हम आपकी जमा राशि के लिए उदार बोनस राशि प्रदान करते हैं। हमारे पास 1 रुपए से 1 लाख तक की खरीद के लिए टेबल हैं, और उनमें से प्रत्येक पर विशेष प्रचार चल रहा है!\",\n    [marketingContent['ALL_SET']['heading']] : \"सब तैयार? यहाँ से शुरुआत करें\",\n    'Common Poker Terms': 'सामान्य पोकर शर्तें',\n    'Rules of Poker': 'पोकर के नियम',\n    'Basics of Poker Math': 'पोकर गणित की मूल बातें',\n\n    copy: {\n      p1: 'Paragraph with <b>html</b> inside',\n      p2: 'Paragraph with clickable %(link)s',\n      \n    },\n    link: 'link',\n    \n    placeholder: 'Input with placeholder',\n}\n\nexport default local;","const local = {\n    title: 'Titel',\n    '9stacks, Where India plays poker!': '9stacks, Where India plays poker!',\n    'Join and get upto 100 bonus in your account!': 'Join and get upto 100 bonus in your account!', \n    'What you get on registering on 9stacks': 'What you get on registering on 9stacks',\n    'Verify your number': 'Verify your number',\n    'Common Poker Terms': 'Common Poker Terms',\n    'Rules of Poker': 'Rules of Poker',\n    'Basics of Poker Math': 'Basics of Poker Math'\n}\n\nexport default local;","import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport Translate from 'react-translate-component';\nimport counterpart from 'counterpart';\nimport React from 'react';\n\nimport * as content from './content.json';\nimport hi from '../../utils/lang/hi';\nimport en from '../../utils/lang/en'; \nimport './LandingPage.scss';\n\nimport Snackbar, { SnackbarOrigin } from '@material-ui/core/Snackbar';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\n\ncounterpart.registerTranslations('en', en);\ncounterpart.registerTranslations('hi', hi);\ncounterpart.setSeparator('*');\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n        flexGrow: 1,\n        textAlign: 'center'\n    }, \n    card: {\n        display: 'flex',\n        padding: 10,\n        alignItems: 'center',\n    },\n    cardDetails: {\n        flex: 1,\n    },\n    cardMedia: {\n        width: 70,\n        height: 70,\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    title: {\n        flexGrow: 1,\n    }\n  }),\n);\n\nconst basicTerminologyPosts = [{\n        title: 'Common Poker Terms',\n        iconImage: 'assets/images/icons/common-poker-terms.svg',\n        navigationULR: 'https://www.9stacks.com/blog/learn-poker/omaha-strategy'\n    },\n    {\n        title: 'Rules of Poker',\n        iconImage: 'assets/images/icons/rules-of-poker.svg',\n        navigationULR: 'https://www.9stacks.com/blog/learn-poker/omaha-strategy'\n    },\n    {\n        title: 'Basics of Poker Math',\n        iconImage: 'assets/images/icons/basic-of-poker-math.svg',\n        navigationULR: 'https://www.9stacks.com/blog/learn-poker/omaha-strategy'\n    },\n];\n\nconst why9stacksPosts = [{\n        title: content.WHY_9STACKS.content1,\n        details: content.WHY_9STACKS.content1Des,\n        iconImage: 'assets/images/icons/risk-free-1paisa.svg',\n        imgAlt: `Risk Free Beginner's Table`\n    }, {\n        title: content.WHY_9STACKS.content2,\n        details: content.WHY_9STACKS.content2Des,\n        iconImage: 'assets/images/icons/free-tournament.svg',\n        imgAlt: `Free Online Poker Tournaments`\n    }, {\n        title: content.WHY_9STACKS.content3,\n        details: content.WHY_9STACKS.content3Des,\n        iconImage: 'assets/images/icons/offers-sample.svg',\n        imgAlt: `High Value Bonuses & Offers`\n    }\n]\n\nexport interface State extends SnackbarOrigin {\n    open: boolean,\n    contactNumber: string\n}\n\nexport default function LandingPage() {\n    const [state, setState] = React.useState<State>({\n        open: false,\n        vertical: 'bottom',\n        horizontal: 'center',\n        contactNumber: ''\n    });\n    const { vertical, horizontal, open } = state;\n\n    let history = useHistory();\n    history.location.pathname.includes('hi') ? counterpart.setLocale('hi') : counterpart.setLocale('en');;\n    history.listen((locationObj) => {\n        locationObj.pathname.includes('hi') ? counterpart.setLocale('hi') : counterpart.setLocale('en');;\n    });\n\n    const classes = useStyles();\n\n    const onRegisterHandler = (event) => {\n        const MOBIEL_REGEX = new RegExp(/^[4-9]\\d{9}$/);\n        if (!MOBIEL_REGEX.test(state.contactNumber)) {\n            setState({\n                ...state,\n                open: true\n            });\n\n            setInterval(() => {\n                setState({\n                    ...state,\n                    open: false\n                }); \n            }, 3000);\n        } else {\n            window.location.href = `https://www.9stacks.com/register?number=${state.contactNumber}`;\n        }\n    }\n\n    const updateInput = (event) => {\n        setState({\n            ...state,\n            contactNumber: event.target.value \n        });\n    }\n\n    return (\n    <div>\n        <CssBaseline />\n        <Snackbar\n            anchorOrigin={{ vertical, horizontal }}\n            key={`${vertical},${horizontal}`}\n            open={open}\n            autoHideDuration={6000}\n            ContentProps={{\n            'aria-describedby': 'message-id',\n            }}\n            message={<span id=\"message-id\">Please enter a valid Number.</span>}\n        />\n        <div className={classes.root}>\n                <AppBar position=\"static\" color='inherit'>\n                    <Toolbar className='header-appbar'>\n                        <img src='assets/images/9stacks-logo.png' alt='9stacks' className='brand-logo' />\n                        <span className='app-header'>\n                            <ReactCSSTransitionGroup transitionName = \"fadein\"\n                            transitionAppear = {true} transitionAppearTimeout = {500}\n                            transitionEnter = {false} transitionLeave = {false}>\n                                <Translate content={content.HEADER.heading} fallback={content.HEADER.heading} />\n                            </ReactCSSTransitionGroup>\n                        </span>\n                        <div>\n                            <NavLink activeClassName=\"active\" to=\"/\">\n                                <Button className='cta' color=\"inherit\">A</Button>\n                            </NavLink>\n                            <NavLink activeClassName=\"active\" to=\"/hi\">\n                                <Button className='cta' color=\"inherit\">आ</Button>\n                            </NavLink> \n                        </div>\n                    </Toolbar>\n                </AppBar>\n                <div className='bannerImageContainer'>\n                    <img src='assets/images/9stacks-banner.png' className='bannerImg' alt='Banner' />\n                    <Grid container alignContent='center' className='content-container'>\n                        <Grid item md={6} xs={12}></Grid>\n                        <Grid item md={6} xs={12}>\n                            <ReactCSSTransitionGroup transitionName = \"fadein\"\n                            transitionAppear = {true} transitionAppearTimeout = {500}\n                            transitionEnter = {false} transitionLeave = {false}>\n                                <div className='banner-image-content'>\n                                    <Translate className='banner-heading' content={content.BANNER_CONTENT.title} fallback={content.BANNER_CONTENT.title} component=\"h1\"/>\n                                    <Translate className='banner-subheading' content={content.BANNER_CONTENT.subtitle} fallback={content.BANNER_CONTENT.subtitle} component=\"h2\"/>\n                                    <div className='input-container'>\n                                        <span className='contact-label'>+91</span>\n                                        <input autoFocus type=\"number\" className='input-box' onChange={updateInput} />\n                                        <Button variant=\"contained\" color=\"secondary\" onClick={onRegisterHandler} className='btn'>\n                                            <Translate content={content.BANNER_CONTENT.register} fallback={content.BANNER_CONTENT.register} component=\"span\"/>\n                                        </Button>\n                                    </div>\n                                </div>\n                            </ReactCSSTransitionGroup>\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className='blocks-container'>\n                    <div className='block-heading'>\n                        <Translate content={content.ON_REGISTER.heading} fallback={content.ON_REGISTER.heading} component=\"h2\"/>\n                    </div>\n                    <div className='block-content'>\n                        <Translate content={content.ON_REGISTER.line1} fallback={content.ON_REGISTER.line1} component=\"p\"/>\n                        <Translate content={content.ON_REGISTER.line2} fallback={content.ON_REGISTER.line2} component=\"p\"/>\n                        <Translate content={content.ON_REGISTER.line3} fallback={content.ON_REGISTER.line3} component=\"p\"/>\n                        <Translate content={content.ON_REGISTER.line4} fallback={content.ON_REGISTER.line4} component=\"p\"/>\n                    </div>\n                    \n                    <div className='block-heading'>\n                        <Translate content={content.NEW_TO_POKER_BLOCK.heading} fallback={content.NEW_TO_POKER_BLOCK.heading} component=\"h2\"/>\n                    </div>\n                    <div className='block-content'>\n                        <Translate content={content.NEW_TO_POKER_BLOCK.subline1} fallback={content.NEW_TO_POKER_BLOCK.subline1} component='p' />\n                        <Translate content={content.NEW_TO_POKER_BLOCK.subline2} fallback={content.NEW_TO_POKER_BLOCK.subline2} component='p' />\n                    </div>\n                    <Grid container justify=\"center\">\n                        <div className='iframe-container'>\n                            <iframe title='Poker Guide' width=\"100%\" height=\"315\" data-allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/55g7XbHlWo8\"></iframe>\n                        </div>\n                    </Grid>\n\n                    <div className='block-heading'>\n                        <Translate content={content.KNOW_MORE.heading} fallback={content.KNOW_MORE.heading} component=\"h2\"/>\n                    </div>\n                    <div className='block-content'>\n                        <Translate content={content.KNOW_MORE.subline1} fallback={content.KNOW_MORE.subline1} component='p' />\n                    </div>\n                    <Grid container spacing={2} justify='center' alignItems=\"center\">\n                        {basicTerminologyPosts.map(post => (\n                            <Grid item key={post.title} xs={12} md={4}>\n                                <CardActionArea component=\"a\" href={post.navigationULR}>\n                                    <Card className={classes.card}>\n                                        <CardMedia className={classes.cardMedia} image={post.iconImage} title={post.title} />\n                                        <div className={classes.cardDetails}>\n                                            <CardContent>\n                                                <Typography component=\"h2\" variant=\"h5\">\n                                                    <Translate content={post.title} component=\"span\"/>\n                                                </Typography>\n                                            </CardContent>\n                                        </div>\n                                    </Card>\n                                </CardActionArea>\n                            </Grid>\n                        ))}\n                    </Grid>\n\n                    <div className='block-heading'>\n                        <Translate content={content.WHY_9STACKS.heading} fallback={content.WHY_9STACKS.heading} component=\"h2\"/>\n                    </div>\n                    <div className='grid-parent'>\n                        {why9stacksPosts.map(post => (\n                        <div key={post.title} className='grid-container'>\n                            <img className='card-icons' src={post.iconImage} alt={post.imgAlt} />\n                            <Translate className='title' content={post.title} fallback={post.title} component='h2'/>\n                            <Translate className='subtitle' content={post.details} fallback={post.details} component='span' />\n                        </div>\n                        ))}\n                    </div> \n                    <div className='footer-container'>\n                            <div className='label-section'>\n                                <Translate content={content.ALL_SET.heading} fallback={content.ALL_SET.heading} component=\"span\"/>\n                            </div>\n                            <div className='input-container'>\n                                <span className='contact-label'>+91</span>\n                                <input type=\"number\" className='input-box' onChange={updateInput} />\n                                <Button variant=\"contained\" color=\"secondary\" onClick={onRegisterHandler} className='btn'>\n                                    <Translate content={content.BANNER_CONTENT.register} fallback={content.BANNER_CONTENT.register} component=\"span\"/>\n                                </Button>\n                            </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './index.css';\nimport LandingPage from './Components/LandingPage/LandingPage';\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n<Router>\n    {/* <ul>\n        <li>\n            <NavLink activeClassName=\"active\" to=\"/\">Landing Page</NavLink>\n        </li>\n        <li>\n            <NavLink exact activeClassName=\"active\" to=\"/hi\">Login</NavLink>\n        </li>\n    </ul> */}\n    <Switch>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route path=\"/hi\" component={LandingPage} />\n    </Switch>\n</Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}